{"version":3,"sources":["serviceWorker.js","views/home/Home.js","views/About/About.js","views/Services/Services.js","views/Galery/Galery.js","views/Blog/Blog.js","views/Contact/Contact.js","views/notFound/NotFound.js","views/routes.js","config/theme.js","config/constants.js","components/atoms/drawerToggleButton/styled.js","components/atoms/drawerToggleButton/DrawerToggleButton.js","components/atoms/logo/styled.js","components/atoms/logo/Logo.js","components/atoms/navLink/styled.js","components/atoms/navLink/NavLink.js","components/molecules/ui/styled.js","components/molecules/ui/Ul.js","config/device.js","components/organisms/nav/styled.js","components/organisms/nav/Nav.js","components/templates/layout/styled.js","components/templates/layout/Layout.js","index.js","assets/images/logo.svg"],"names":["Boolean","window","location","hostname","match","Home","react_default","a","createElement","className","src","logo","alt","href","target","rel","About","Services","Galery","Blog","Contact","NotFound","routes","mount","/","route","title","getData","view","home_Home","/about-us","views_About_About","/services","views_Services_Services","/galery","views_Galery_Galery","/blog","views_Blog_Blog","/contact-us","views_Contact_Contact","/notFound","notFound_NotFound","backgroundColor","theme","light","dark","textColor","colors","primary","secondary","items","dropdown","name","ToogleButton","Styled","div","_templateObject","ToogleButtonLine","_templateObject2","DrawerToogeButton","ImgContainer","styled_templateObject","ID","Logo","id","style","height","NavLink","li","navLink_styled_templateObject","Span","span","styled_templateObject2","props","styles","anchor","fontWeight","cursor","textDecoration","withTheme","item","anchorStyle","Object","objectSpread","color","key","concat","es","Wrapper","nav","ui_styled_templateObject","Ul","map","navLink_NavLink","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","nav_styled_templateObject","Nav","styled_Wrapper","Header","layout_styled_templateObject","scrollY","Main","layout_styled_templateObject2","_templateObject3","ReactDOM","render","_ref","children","_useState","useState","_useState2","slicedToArray","setScrollY","loadingRoute","useLoadingRoute","handleScroll","pageYOffset","useEffect","addEventListener","removeEventListener","styled_components_browser_esm","mode","layout_styled_Wrapper","BusyIndicator","isBusy","delayMs","react","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"wUAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4FCOSC,MArBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,0BADP,wBAGAF,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,wBCLOC,MAJf,WACE,OAAOV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,0BCGMQ,MAJf,WACE,OAAOX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,6BCGMS,MAJf,WACE,OAAOZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,2BCGMU,MAJf,WACE,OAAOb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,yBCGMW,MAJf,WACE,OAAOd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,sBCEMY,MAJf,WACE,OAAOf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,kBC+CMa,EAvCAC,YAAM,CACnBC,IAAKC,YAAM,CACTC,MAAO,OACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAACqB,EAAD,QAERC,YAAaL,YAAM,CACjBC,MAAO,WACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAACuB,EAAD,QAERC,YAAaP,YAAM,CACjBC,MAAO,WACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAACyB,EAAD,QAERC,UAAWT,YAAM,CACfC,MAAO,SACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAAC2B,EAAD,QAERC,QAASX,YAAM,CACbC,MAAO,OACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAAC6B,EAAD,QAERC,cAAeb,YAAM,CACnBC,MAAO,aACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAAC+B,EAAD,QAGRC,YAAaf,YAAM,CACjBC,MAAO,WACPC,QAAS,aACTC,KAAMtB,EAAAC,EAAAC,cAACiC,EAAD,iDC3CGC,EAAkBC,IAAM,OAAQ,CAC3CC,MAAO,UACPC,KAAM,SAIKC,EAAYH,IAAM,OAAQ,CACrCC,MAAO,OACPC,KAAM,SAGKE,EAAS,CACpBC,QAAS,mBACTC,UAAW,qBChBAC,EAAQ,CACnB,CACExB,MAAO,OACPb,KAAM,KAER,CACEa,MAAO,QACPb,KAAM,aAER,CACEsC,UAAU,EACVzB,MAAO,WACPwB,MAAO,CACL,CACEE,KAAM,cACNvC,KAAM,gBAER,CACEuC,KAAM,cACNvC,KAAM,kBAIZ,CACEa,MAAO,SACPb,KAAM,WAER,CACEa,MAAO,OACPb,KAAM,SAER,CACEa,MAAO,UACPb,KAAM,0aC/BH,IAAMwC,EAAeC,IAAOC,IAAVC,KASZC,EAAmBH,IAAOC,IAAVG,KCRd,SAASC,IACtB,OACErD,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACiD,EAAD,gGCNC,IAAMG,EAAeN,IAAOC,IAAVM,KCEnBC,EAAK,OAEI,SAASC,IACtB,OACEzD,EAAAC,EAAAC,cAACoD,EAAD,CAAcI,GAAIF,GAChBxD,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMsD,MAAO,CAAEC,OAAQ,SAAYtD,IAAI,yoBCPhD,IAAMuD,EAAUb,IAAOc,GAAVC,KAuBPC,EAAOhB,IAAOiB,KAAVC,IAMJ,SAAAC,GAAK,OAAIA,EAAM9B,MAAMI,OAAOE,YAI5ByB,EAAS,CACpBC,OAAQ,CACNC,WAAY,IACZC,OAAQ,UACRC,eAAgB,SCjCdhB,EAAK,KAyBIiB,kBAvBf,SAAiBN,GAAO,IACdO,EAAiBP,EAAjBO,KAAMrC,EAAW8B,EAAX9B,MACRsC,EAAWC,OAAAC,EAAA,EAAAD,CAAA,GAAQR,EAAOC,OAAf,CAAuBS,MAAOzC,EAAMI,OAAOC,UAE5D,OACE1C,EAAAC,EAAAC,cAAC2D,EAAD,CAASH,GAAIF,EAAIuB,IAAG,GAAAC,OAAKN,EAAKnE,KAAV,KAAAyE,OAAkBN,EAAKtD,QACzCpB,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACEvB,GAAG,SACHC,MAAOgB,EACPI,IAAG,GAAAC,OAAKN,EAAKnE,KAAV,KAAAyE,OAAkBN,EAAKtD,OAC1Bb,KAAMmE,EAAKnE,MAEXP,EAAAC,EAAAC,cAAC8D,EAAD,KAAOU,EAAKtD,mJClBb,IAAM8D,EAAUlC,IAAOmC,IAAVC,KCGd5B,EAAK,KAEI,SAAS6B,EAAGlB,GAAO,IACxBvB,EAAWuB,EAAXvB,MAER,OACE5C,EAAAC,EAAAC,cAACgF,EAAD,CAASxB,GAAIF,GACVZ,EAAM0C,IAAI,SAAAZ,GAAI,OACb1E,EAAAC,EAAAC,cAACqF,EAAD,CAASR,IAAG,GAAAC,OAAKN,EAAKtD,MAAV,KAAA4D,OAAmBN,EAAKnE,MAAQmE,KAAMA,OCbnD,IAAMc,EAEF,QAFEA,EAGF,QAHEA,EAIH,QAJGA,EAKH,SALGA,GAMF,SANEA,GAOF,SAGEC,GAAS,CACpBC,QAAO,eAAAV,OAVE,QAUF,KACPW,QAAO,eAAAX,OAAiBQ,EAAjB,KACPI,QAAO,eAAAZ,OAAiBQ,EAAjB,KACPK,OAAM,eAAAb,OAAiBQ,EAAjB,KACNM,OAAM,eAAAd,OAAiBQ,EAAjB,KACNO,QAAO,eAAAf,OAAiBQ,GAAjB,KACPQ,QAAO,eAAAhB,OAAiBQ,GAAjB,KACPS,SAAQ,eAAAjB,OAAiBQ,GAAjB,iNCfH,IAAMN,GAAUlC,IAAOC,IAAViD,KAKTT,GAAOI,QCDZrC,GAAK,MAEI,SAAS2C,GAAIhC,GAAO,IACzBvB,EAAWuB,EAAXvB,MAER,OACE5C,EAAAC,EAAAC,cAACkG,GAAD,CAAS1C,GAAIF,IACXxD,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACmF,EAAD,CAAIzC,MAAOA,IACX5C,EAAAC,EAAAC,cAACmD,EAAD,ydCbC,IAAMgD,GAASrD,IAAOC,IAAVqD,KAQN,SAAAnC,GAAK,OAAKA,EAAMoC,QAAU,IAAM,GAAM,IAItCC,GAAOxD,IAAOC,IAAVwD,MAKJvB,GAAUlC,IAAOC,IAAVyD,KACEtE,EACXI,GCbLgB,GAAK,SCCXmD,IAASC,OACP5G,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAQjE,OAAQA,GACdhB,EAAAC,EAAAC,cDDW,SAAA2G,GAA+B,IAAbC,EAAaD,EAAbC,SAAaC,EACXC,mBAASrH,OAAO4G,SADLU,EAAArC,OAAAsC,EAAA,EAAAtC,CAAAmC,EAAA,GACpCR,EADoCU,EAAA,GAC3BE,EAD2BF,EAAA,GAKtCG,EAAeC,cAEfC,EAAe,kBAAMH,EAAWxH,OAAO4H,cAS7C,OAPAC,oBAAU,WAER,OADA7H,OAAO8H,iBAAiB,SAAUH,GAAc,GACzC,WACL3H,OAAO+H,oBAAoB,SAAUJ,GAAc,KAEpD,IAGDtH,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAetF,MAAO,CAAEuF,KAAM,QAASnF,WACrCzC,EAAAC,EAAAC,cAAC2H,GAAD,CAASnE,GAAIF,IAEXxD,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAeC,SAAUX,EAAcY,QAAS,MAChDhI,EAAAC,EAAAC,cAACmG,GAAD,CAAQ3C,GAAG,SAAS6C,QAASA,GAC3BvG,EAAAC,EAAAC,cAACiG,GAAD,CAAKvD,MAAOA,KAEd5C,EAAAC,EAAAC,cAACsG,GAAD,KAAOM,MCvBX,KACE9G,EAAAC,EAAAC,cAAC+H,EAAA,SAAD,CAAUC,SAAU,MAClBlI,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,SAINkD,SAASC,eAAe,SxB6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCyBjInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.af3d36c2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport logo from '../../assets/images/logo.svg';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './About.css';\n\nfunction About() {\n  return <div className=\"About\">About Component</div>;\n}\n\nexport default About;\n","import React from 'react';\nimport './Services.css';\n\nfunction Services() {\n  return <div className=\"Services\">Services Component</div>;\n}\n\nexport default Services;\n","import React from 'react';\nimport './Galery.css';\n\nfunction Galery() {\n  return <div className=\"Galery\">Galery Component</div>;\n}\n\nexport default Galery;\n","import React from 'react';\nimport './Blog.css';\n\nfunction Blog() {\n  return <div className=\"Blog\">Blog Component</div>;\n}\n\nexport default Blog;\n","import React from 'react';\nimport './Contact.css';\n\nfunction Contact() {\n  return <div className=\"Contact\">Contact Component</div>;\n}\n\nexport default Contact;\n","import React from 'react';\n\nfunction NotFound() {\n  return <div className=\"App\">NotFound View</div>;\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { mount, route, } from 'navi';\nimport Home from './home/Home';\nimport About from './About/About';\nimport Services from './Services/Services';\nimport Galery from './Galery/Galery';\nimport Blog from './Blog/Blog';\nimport Contact from './Contact/Contact';\nimport NotFound from './notFound/NotFound';\n\n// Define your routes\nconst routes = mount({\n  '/': route({\n    title: 'Home',\n    getData: () => {},\n    view: <Home />,\n  }),\n  '/about-us': route({\n    title: 'About Us',\n    getData: () => {},\n    view: <About />,\n  }),\n  '/services': route({\n    title: 'Services',\n    getData: () => {},\n    view: <Services />,\n  }),\n  '/galery': route({\n    title: 'Galery',\n    getData: () => {},\n    view: <Galery />,\n  }),\n  '/blog': route({\n    title: 'Blog',\n    getData: () => {},\n    view: <Blog />,\n  }),\n  '/contact-us': route({\n    title: 'Contact Us',\n    getData: () => {},\n    view: <Contact />,\n  }),\n  // \"/products\": lazy(() => import(\"./productsRoutes\"))\n  '/notFound': route({\n    title: 'NotFound',\n    getData: () => {},\n    view: <NotFound />,\n  }),\n});\n\nexport default routes;\n","import theme from 'styled-theming';\n\n// define background colours for `mode` theme\nexport const backgroundColor = theme('mode', {\n  light: '#fafafa',\n  dark: '#222',\n});\n\n// define text color for `mode` theme\nexport const textColor = theme('mode', {\n  light: '#000',\n  dark: '#fff',\n});\n\nexport const colors = {\n  primary: 'rgb(46, 65, 109)',\n  secondary: 'rgb(90, 191, 237)',\n};\n","export const items = [\n  {\n    title: 'Home',\n    href: '/',\n  },\n  {\n    title: 'About',\n    href: '/about-us',\n  },\n  {\n    dropdown: true,\n    title: 'Services',\n    items: [\n      {\n        name: 'Service One',\n        href: '/service-one',\n      },\n      {\n        name: 'Service Two',\n        href: '/service-two',\n      },\n    ],\n  },\n  {\n    title: 'Galery',\n    href: '/galery',\n  },\n  {\n    title: 'Blog',\n    href: '/blog',\n  },\n  {\n    title: 'Contact',\n    href: '/contact-us',\n  },\n];\n","import Styled from 'styled-components';\n\nexport const ToogleButton = Styled.div`\n  position: relative;\n  display: block;\n  margin-top: -13px;\n  margin-right: 6%;\n  z-index: 1999;\n  transform: translateY(40%);\n`;\n\nexport const ToogleButtonLine = Styled.div`\n  display: block;\n  text-decoration: none;\n  width: 25px;\n  height: 5px;\n  border-bottom: 2px solid;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { ToogleButton, ToogleButtonLine, } from './styled';\n\nexport default function DrawerToogeButton() {\n  return (\n    <ToogleButton>\n      <ToogleButtonLine />\n      <ToogleButtonLine />\n      <ToogleButtonLine />\n    </ToogleButton>\n  );\n}\n","import Styled from 'styled-components';\n\nexport const ImgContainer = Styled.div`\n  display: flex;\n`;\n","import React from 'react';\nimport { ImgContainer, } from './styled';\nimport logo from '../../../assets/images/logo.svg';\n\nconst ID = 'logo';\n\nexport default function Logo() {\n  return (\n    <ImgContainer id={ID}>\n      <img src={logo} style={{ height: '5vmin', }} alt=\"logo\" />\n    </ImgContainer>\n  );\n}\n","import Styled from 'styled-components';\n\nexport const NavLink = Styled.li`\n  display: flex;\n  max-width: 100%;\n  height: 50%;\n  align-items: center;\n  min-width: 0px;\n  min-height: 0px;\n  flex-direction: column;\n  justify-content: center;\n  font-family: Foundry;\n  outline: none;\n  margin: 0px;\n  padding: 6px;\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n  &:active {\n    transform: scale(0.95);\n    opacity: 0.6;\n  }\n`;\n\nexport const Span = Styled.span`\n  font-family: Open Sans;\n  font-weight: 300;\n  font-size: 16px;\n  padding: .6em;\n  &:hover {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport const styles = {\n  anchor: {\n    fontWeight: 600,\n    cursor: 'pointer',\n    textDecoration: 'none',\n  },\n};\n","import React from 'react';\nimport { Link, } from 'react-navi';\nimport PropTypes from 'prop-types';\nimport { withTheme, } from 'styled-components';\nimport { NavLink, Span, styles, } from './styled';\n\nconst ID = 'li';\n\nfunction Navlink(props) {\n  const { item, theme, } = props;\n  const anchorStyle = { ...styles.anchor, color: theme.colors.primary, };\n\n  return (\n    <NavLink id={ID} key={`${item.href}-${item.title}`}>\n      <Link\n        id=\"anchor\"\n        style={anchorStyle}\n        key={`${item.href}-${item.title}`}\n        href={item.href}\n      >\n        <Span>{item.title}</Span>\n      </Link>\n    </NavLink>\n  );\n}\n\nNavlink.propTypes = {\n  item: PropTypes.objectOf(PropTypes.object).isRequired,\n  theme: Object.isRequired,\n};\n\nexport default withTheme(Navlink);\n","import Styled from 'styled-components';\n\nexport const Wrapper = Styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navlink from '../../atoms/navLink/NavLink';\nimport { Wrapper, } from './styled';\n\nconst ID = 'ul';\n\nexport default function Ul(props) {\n  const { items, } = props;\n\n  return (\n    <Wrapper id={ID}>\n      {items.map(item => (\n        <Navlink key={`${item.title}_${item.href}`} item={item} />\n      ))}\n    </Wrapper>\n  );\n}\n\nUl.propTypes = {\n  items: PropTypes.instanceOf(PropTypes.object).isRequired,\n};\n","export const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n};\n","import Styled from 'styled-components';\nimport { device, } from '../../../config/device';\n\nexport const Wrapper = Styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media ${device.tablet} {  \n    background-color: red;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DrawerToogeButton from '../../atoms/drawerToggleButton/DrawerToggleButton';\nimport Logo from '../../atoms/logo/Logo';\nimport Ul from '../../molecules/ui/Ul';\nimport { Wrapper, } from './styled';\n\nconst ID = 'nav';\n\nexport default function Nav(props) {\n  const { items, } = props;\n\n  return (\n    <Wrapper id={ID}>\n      <Logo />\n      <Ul items={items} />\n      <DrawerToogeButton />\n    </Wrapper>\n  );\n}\n\nNav.propTypes = {\n  items: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n","import Styled from 'styled-components';\nimport { backgroundColor, textColor, } from '../../../config/theme';\n\nexport const Header = Styled.div`\n  padding: .15em 28px;\n  width: 100%;\n  min-height: 40px;\n  position: fixed;\n  top: 0px;\n  z-index: 1;\n  background: white;\n  opacity: ${props => (props.scrollY > 100 ? 0.9 : 1)};\n  transition: opacity .3s ease-in-out;\n`;\n\nexport const Main = Styled.div`\n  height: 1000vh;\n`;\n\n// apply theming to a styled component\nexport const Wrapper = Styled.div`\n  background-color: ${backgroundColor};\n  color: ${textColor}\n`;\n","import React, { useState, useEffect, } from 'react';\nimport BusyIndicator from 'react-busy-indicator';\nimport { ThemeProvider, } from 'styled-components';\nimport { useLoadingRoute, } from 'react-navi';\nimport { colors, } from '../../../config/theme';\nimport { items, } from '../../../config/constants';\nimport Nav from '../../organisms/nav/Nav';\nimport { Wrapper, Main, Header, } from './styled';\n\nconst ID = 'layout';\n\nexport default function Layout({ children, }) {\n  const [ scrollY, setScrollY, ] = useState(window.scrollY);\n\n  // If there is a route that hasn't finished loading, it can be\n  // retrieved with `useLoadingRoute()`.\n  const loadingRoute = useLoadingRoute();\n\n  const handleScroll = () => setScrollY(window.pageYOffset);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, true);\n    return () => {\n      window.removeEventListener('scroll', handleScroll, true);\n    };\n  }, []);\n\n  return (\n    <ThemeProvider theme={{ mode: 'light', colors, }}>\n      <Wrapper id={ID}>\n        {/* This component shows a loading indicator after a delay */}\n        <BusyIndicator isBusy={!!loadingRoute} delayMs={200} />\n        <Header id=\"header\" scrollY={scrollY}>\n          <Nav items={items} />\n        </Header>\n        <Main>{children}</Main>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n","import React, { Suspense, } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, View, } from 'react-navi';\nimport './index.css';\n// import theme from 'config/theme';\nimport * as serviceWorker from './serviceWorker';\n\nimport routes from './views/routes';\nimport Layout from './components/templates/layout/Layout';\n\nReactDOM.render(\n  <Router routes={routes}>\n    <Layout>\n      <Suspense fallback={null}>\n        <View />\n      </Suspense>\n    </Layout>\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}